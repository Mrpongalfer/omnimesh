# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import fabric_pb2 as fabric__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in fabric_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class FabricServiceStub(object):
    """--- Services ---

    Nexus Prime Fabric Management Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterAgent = channel.unary_unary(
                '/fabric.FabricService/RegisterAgent',
                request_serializer=fabric__pb2.AgentRegistrationRequest.SerializeToString,
                response_deserializer=fabric__pb2.AgentRegistrationResponse.FromString,
                _registered_method=True)
        self.UpdateAgentStatus = channel.unary_unary(
                '/fabric.FabricService/UpdateAgentStatus',
                request_serializer=fabric__pb2.AgentStatusUpdate.SerializeToString,
                response_deserializer=fabric__pb2.CommandResponse.FromString,
                _registered_method=True)
        self.StreamFabricEvents = channel.unary_stream(
                '/fabric.FabricService/StreamFabricEvents',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=fabric__pb2.FabricEvent.FromString,
                _registered_method=True)
        self.SendFabricCommand = channel.unary_unary(
                '/fabric.FabricService/SendFabricCommand',
                request_serializer=fabric__pb2.FabricCommand.SerializeToString,
                response_deserializer=fabric__pb2.CommandResponse.FromString,
                _registered_method=True)


class FabricServiceServicer(object):
    """--- Services ---

    Nexus Prime Fabric Management Service
    """

    def RegisterAgent(self, request, context):
        """Compute Node/Proxy registers itself with Nexus Prime
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAgentStatus(self, request, context):
        """Compute Node/Proxy sends status updates and telemetry
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamFabricEvents(self, request, context):
        """UI/Mobile app subscribes to real-time fabric events
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFabricCommand(self, request, context):
        """Architect issues commands to the fabric (e.g., via UI)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FabricServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterAgent': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterAgent,
                    request_deserializer=fabric__pb2.AgentRegistrationRequest.FromString,
                    response_serializer=fabric__pb2.AgentRegistrationResponse.SerializeToString,
            ),
            'UpdateAgentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAgentStatus,
                    request_deserializer=fabric__pb2.AgentStatusUpdate.FromString,
                    response_serializer=fabric__pb2.CommandResponse.SerializeToString,
            ),
            'StreamFabricEvents': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamFabricEvents,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=fabric__pb2.FabricEvent.SerializeToString,
            ),
            'SendFabricCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFabricCommand,
                    request_deserializer=fabric__pb2.FabricCommand.FromString,
                    response_serializer=fabric__pb2.CommandResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fabric.FabricService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('fabric.FabricService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FabricService(object):
    """--- Services ---

    Nexus Prime Fabric Management Service
    """

    @staticmethod
    def RegisterAgent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fabric.FabricService/RegisterAgent',
            fabric__pb2.AgentRegistrationRequest.SerializeToString,
            fabric__pb2.AgentRegistrationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAgentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fabric.FabricService/UpdateAgentStatus',
            fabric__pb2.AgentStatusUpdate.SerializeToString,
            fabric__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamFabricEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/fabric.FabricService/StreamFabricEvents',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            fabric__pb2.FabricEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendFabricCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/fabric.FabricService/SendFabricCommand',
            fabric__pb2.FabricCommand.SerializeToString,
            fabric__pb2.CommandResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
